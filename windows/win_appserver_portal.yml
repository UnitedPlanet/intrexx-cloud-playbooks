---
# This Playbook would deploy the whole app server

- hosts: appserver_portal
  vars_files:
    - ./vars.yml
    - ./dbVars.yml
  tasks:
  - name: Create directory structure
    win_file:
      path: C:\install
      state: directory

  - name: Download 7zip setup
    win_uri:
      url: https://www.7-zip.org/a/7z1900-x64.msi
      method: GET
      dest: C:\install\7z-x64.msi
      creates: C:\install\7z-x64.msi

  - name: Copy install.cmd for 7zip
    win_copy:
      src: files/install.cmd
      dest: C:\install\install.cmd

  - name: Install 7zip
    args:
      creates: 'C:\Program Files\7-Zip'
      chdir: C:\install\
    win_command: C:\install\install.cmd

  - name: Download Intrexx setup
    win_uri:
      url: https://download.unitedplanet.com/intrexx/90500/{{ ix_setup_filename }}
      method: GET
      dest: C:\install\{{ ix_setup_filename }}
      creates: C:\install\{{ ix_setup_filename }}
  
    #- name: Copy setup
    #win_copy:
    #  src: files/professional.zip
    #  dest: C:\install\professional.zip
    #args:
    #  creates: C:\install\professional.zip

  - name: Copy setup cfg
    win_template:
      src: files/configuration_portal.j2
      dest: C:\install\configuration.properties

  - name: Unzip setup
    win_command: '"C:\Program Files\7-Zip\7z.exe" x C:\install\{{ ix_setup_filename }} -oC:\install'
    args:
      creates: C:\install\{{ ix_setup_folder }}

  - name: Firewall rule to allow Intrexx on TCP port 1337
    win_firewall_rule:
      name: IntrexxHTTP
      localport: 1337
      action: allow
      direction: in
      protocol: tcp
      state: present
      enabled: yes

  - name: Disable all firewalls
    win_firewall:
      state: disabled
      profiles:
      - Domain
      - Public
      - Private
    tags: disable_firewall

  - name: Install intrexx
    win_command: C:\install\{{ ix_setup_folder }}\setup.bat -t --configFile=C:\install\configuration.properties
    args:
      creates: C:\intrexx\bin\windows\portal.bat
    
  - name: Copy logon script 
    win_template: src=files/LogonServices.j2 dest=C:\install\LogonServices.ps1

  - name: Enable service logon
    win_shell: C:\install\LogonServices.ps1 "{{ aws_appserver_hostname }}\\{{ aws_username }}"

  - name: Remove cfg folder
    win_file:
      path: C:\intrexx\cfg
      state: absent

  - name: Mount share folder
    win_command: cmd /c mklink /D C:\share {{ ix_share_unc_path }}    
    args:
      creates: C:\share
    
  - name: Mount cfg folder
    win_command: cmd /c mklink /D C:\intrexx\cfg C:\share\cfg    
    args:
      creates: C:\intrexx\cfg\initial.cfg

  - name: Mount Solr folder
    win_command: cmd /c mklink /D C:\intrexx\solr C:\share\solr
    args:
      creates: C:\intrexx\solr\server\solr
    
  - name: Create and start portal service
    win_service:
      name: upixp_{{ ix_portal_name }}
      display_name: Intrexx Portal
      path: C:\intrexx\bin\windows\amd64\wrapper.exe -s C:\share\{{ ix_portal_name }}\internal\cfg\portal.wcf
      state: started
      start_mode: auto
      username: "{{ aws_username }}"
      password: "{{ aws_portal_pw }}"

  - name: Stop Supervisor service
    win_service:
      name: upixsupervisor
      state: stopped
      start_mode: disabled
      username: "{{ aws_username }}"
      password: "{{ aws_portal_pw }}"

  - name: Create task to start the portal service for the first time on boot
    win_scheduled_task:
      name: Intrexx portal service start
      description: Starts Intrexx for the first time on boot
      actions:
      - path: C:\Windows\System32\net.exe
        arguments: start upixp_{{ ix_portal_name }}
      triggers:
      - type: boot
      username: SYSTEM
      run_level: highest